plugins {
    id "org.wisepersist.gwt" version "1.1.12"
}
apply plugin: "java"
apply plugin: "maven-publish"
if(project.gradle.startParameter.taskNames.contains("gwtDev")) {
    apply plugin: "war"
    apply plugin: "gwt"
    gwt.modules "net.sayaya.Test"
    sourceSets.main.java.srcDirs += 'src/test/java'
} else {
    apply plugin: "gwt-base"
    publishing {
        publications {
            maven(MavenPublication) {
                groupId 'net.sayaya'
                artifactId 'ui'
                version "3.1"
            }
        }
    }
}

group "net.sayaya"
version "3.1"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

repositories {
    mavenLocal()
    mavenCentral()
}
dependencies {
    implementation("org.jboss.elemento:elemento-core:${elementoVersion}")
    implementation("com.google.elemental2:elemental2-svg:1.1.0")
    implementation("com.google.gwt:gwt-user:${gwtVersion}")
    implementation("com.google.gwt:gwt-dev:${gwtVersion}")
    implementation("org.projectlombok:lombok:1.18.20")
    annotationProcessor("org.projectlombok:lombok:1.18.20")
    testCompileOnly("org.projectlombok:lombok:1.18.20")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.20")
}
gwt {
    gwtVersion = "${gwtVersion}"
    minHeapSize = "1024M"
    maxHeapSize = "2048M"
    jsInteropExports.setGenerate(true)
    compiler {
        localWorkers = 12
        disableClassMetadata = true
        disableCastChecking = true
    }
}
ext {
    lombok = project.configurations.annotationProcessor.find { it.name.startsWith("lombok") }
}
if(project.gradle.startParameter.taskNames.contains("gwtDev")) {
    gwtDev {
        jvmArgs "-XX:ReservedCodeCacheSize=512M","-javaagent:${lombok}=ECJ"
        port 8888
        war file("src/test/webapp")
    }
} else {
    jar {
        from sourceSets.main.allSource
        archiveName "${archivesBaseName}.jar"
    }
}
compileGwt {
    minHeapSize = "2048M"
    maxHeapSize = "4096M"
    jvmArgs "-XX:ReservedCodeCacheSize=512M","-Xss2M","-javaagent:${lombok}=ECJ","-generateJsInteropExport"
}